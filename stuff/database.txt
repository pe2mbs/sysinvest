
class JSONEncodedDict( TypeDecorator ):
    """Represents an immutable structure as a json-encoded string.

    Usage::

        JSONEncodedDict(255)

    """

    impl = LargeBinary
    cache_ok = True

    def process_bind_param(self, value, dialect):
        if isinstance( value, ( str, bytes ) ):
            value = orjson.loads( value )

        if isinstance( value, ( list, dict ) ):
            value = gzip.compress( orjson.dumps( value ) )

        return value

    def process_result_value(self, value, dialect):
        if isinstance( value, bytes ):
            if value.startswith(b'{') and value.endswith(b'}'):
                value = orjson.loads( value )

            elif value.startswith( b'\x1f\x8b\x08\x00' ):
                value = orjson.loads( gzip.decompress( value ) )

        return value


